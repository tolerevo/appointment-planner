{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport { contactPicker } from \"../contactPicker/ContactPicker\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getTodayString = () => {\n  const [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n};\nexport const AppointmentForm = ({\n  contacts,\n  title,\n  setTitle,\n  contact,\n  setContact,\n  date,\n  setDate,\n  time,\n  setTime,\n  handleSubmit\n}) => {\n  _s();\n  const contactNames = useMemo(() => {\n    return contacts.map(contact => contact.name);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(AppointmentForm, \"9tur8ZuM/Pgiy8Lm5dK4dfxE0e4=\");\n_c = AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","useMemo","contactPicker","Fragment","_Fragment","jsxDEV","_jsxDEV","getTodayString","month","day","year","Date","toLocaleDateString","split","padStart","AppointmentForm","contacts","title","setTitle","contact","setContact","date","setDate","time","setTime","handleSubmit","_s","contactNames","map","name","_c","$RefreshReg$"],"sources":["/Users/ditole/projects/appointment-planner-starting-v18/src/components/appointmentForm/AppointmentForm.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\n\r\nimport { contactPicker } from \"../contactPicker/ContactPicker\";\r\n\r\nconst getTodayString = () => {\r\n  const [month, day, year] = new Date()\r\n    .toLocaleDateString(\"en-US\")\r\n    .split(\"/\");\r\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n};\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n\r\n  const contactNames = useMemo(() => {\r\n    return contacts.map((contact) => contact.name);\r\n  })\r\n  return (\r\n    <></>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAEtC,SAASC,aAAa,QAAQ,gCAAgC;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAM,CAACC,KAAK,EAAEC,GAAG,EAAEC,IAAI,CAAC,GAAG,IAAIC,IAAI,CAAC,CAAC,CAClCC,kBAAkB,CAAC,OAAO,CAAC,CAC3BC,KAAK,CAAC,GAAG,CAAC;EACb,OAAQ,GAAEH,IAAK,IAAGF,KAAK,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGL,GAAG,CAACK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;AACpE,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAC;EAC9BC,QAAQ;EACRC,KAAK;EACLC,QAAQ;EACRC,OAAO;EACPC,UAAU;EACVC,IAAI;EACJC,OAAO;EACPC,IAAI;EACJC,OAAO;EACPC;AACF,CAAC,KAAK;EAAAC,EAAA;EAEJ,MAAMC,YAAY,GAAG1B,OAAO,CAAC,MAAM;IACjC,OAAOe,QAAQ,CAACY,GAAG,CAAET,OAAO,IAAKA,OAAO,CAACU,IAAI,CAAC;EAChD,CAAC,CAAC;EACF,oBACEvB,OAAA,CAAAF,SAAA,mBAAI,CAAC;AAET,CAAC;AAACsB,EAAA,CAnBWX,eAAe;AAAAe,EAAA,GAAff,eAAe;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}